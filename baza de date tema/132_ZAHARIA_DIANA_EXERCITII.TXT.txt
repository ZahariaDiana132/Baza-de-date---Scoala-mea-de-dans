11,12,13,16 exercitii.

--SCRIE CATE CURSURI,SEDINTE,PROIECTE(IN TOTAL ) PREDA COREGRAFUL NASCUT PE 1 IANUARIE 1998

SELECT COUNT(*)
FROM ((COREGRAF INNER JOIN CURS ON COREGRAF.ID_ANG=CURS.ID_ANG) INNER JOIN PROIECT ON (COREGRAF.ID_ANG=PROIECT.ID_ANG))JOIN SEDINTA_PRIVATA ON (COREGRAF.ID_ANG=SEDINTA_PRIVATA.ID_ANG)
WHERE COREGRAF.DATA_NASTERE='1-JAN-1998';

--Sterge proiectele ale caror zi de desfasurare a trecut,care si-au vandut toate locurile sau care nu au vandut destule locuri la timp, foloseste sysdate si least si e o subcerere de suprimare a datelor
(adaugam ce urmeaza sa stergem)
INSERT INTO PROIECT VALUES(7,'bulgaria',14,'3-JUN-2021',2,250,10,25,2);
INSERT INTO PROIECT VALUES(11,'bulgaria',14,'3-JUN-2021',2,250,10,25,2); 
INSERT INTO PROIECT VALUES(6,'TIMIS',14,'5-JUN-2021',2,250,10,13,2); 
INSERT INTO PROIECT VALUES(9,'TIMISA',14,'5-JUN-2021',2,250,10,12,2); 
INSERT INTO PROIECT VALUES(8,'TIMIS',14,'15-JUN-2021',2,250,10,0,2);
INSERT INTO PROIECT VALUES(10,'TIMIS',14,'15-JUN-2021',2,250,10,0,2);

DELETE FROM PROIECT
WHERE PROIECT_ID IN (SELECT PROIECT_ID
                     FROM PROIECT
                     WHERE (LEAST(SYSDATE,ZIUA_P)=ZIUA_P) or ((least(sysdate,ziua_p)=sysdate and least(sysdate+2,ziua_p)=ziua_p) and nr_locuri>11) or nr_locuri=0);





--Sterge rezervarile facute de client la cursurile la care nu au voie din cauza limitei de varsta, foloseste conversia datelor si e o subcerere de suprimare
DELETE FROM REZERVARE
WHERE REZERVARE_ID in (SELECT REZERVARE_ID
                    FROM ((REZERVARE INNER JOIN CLIENTI ON CLIENTI.CLIENT_ID=REZERVARE.CLIENT_ID) INNER JOIN CURS ON CURS.CURS_ID=REZERVARE.CURS_ID) INNER JOIN TIPDANS ON TIPDANS.TIPDANS_ID=CURS.TIPDANS_ID
                    WHERE (TO_NUMBER(TO_CHAR(SYSDATE,'YYYY'))- TO_NUMBER(TO_CHAR(DATA_NASTERE,'YYYY')))<LIMITA_VARSTA);
(adaugam ce stergem)
INSERT INTO REZERVARE VALUES(11,15,17,NULL,NULL);  
INSERT INTO REZERVARE VALUES(12,15,18,NULL,NULL);


--Afla numarul de locuri valabile pt rezervare de la cursuri atunci cand un loc este rezervat si le ordoneaza crescator dupa acel nr

SELECT a.idcc cursid,a.nrl vechi,a.nrl-a.scad nou
FROM (SELECT B.NR scad,B.idc idcc,CURS.NR_LOCURI nrl
      FROM (SELECT COUNT(*) NR,curs.curs_id idc
            FROM CURS right JOIN REZERVARE ON CURS.CURS_ID=REZERVARE.CURS_ID
            group by curs.curs_id)B INNER JOIN CURS ON B.idc=CURS.CURS_ID)a
ORDER BY a.nrl-a.scad;

--STERGE REZERVARILE ANULATE

ALTER TABLE ANULARE
ADD REZERVARE_ID INTEGER;

ALTER TABLE ANULARE
ADD CONSTRAINT REZERVARE_ID
FOREIGN KEY (REZERVARE_ID)
REFERENCES REZERVARE (REZERVARE_ID) ON DELETE CASCADE; (NU LE LEGASEM INITIAL)

TRUNCATE TABLE ANULARE;

INSERT INTO ANULARE VALUES(10,'LUNI',2);
INSERT INTO ANULARE VALUES(14,'MARTI',4);
INSERT INTO ANULARE VALUES(9,'LUNI',6);
INSERT INTO ANULARE VALUES(13,'MARTI',8);
INSERT INTO ANULARE VALUES(15,'LUNI',1);
INSERT INTO ANULARE VALUES(11,'LUNI',12);

DELETE FROM REZERVARE 
WHERE REZERVARE_ID in (SELECT REZERVARE.REZERVARE_ID
                    FROM (REZERVARE INNER JOIN ANULARE ON REZERVARE.REZERVARE_ID=ANULARE.REZERVARE_ID) INNER JOIN CURS ON REZERVARE.CURS_ID=CURS.CURS_ID
                    WHERE CURS.ORA>ANULARE.ORA_ANULARE+1);

SELECT*
FROM REZERVARE;
SELECT*
FROM ANULARE;

INSERT INTO REZERVARE VALUES(2,1,18,NULL,NULL);
INSERT INTO REZERVARE VALUES(4,3,2,NULL,NULL);
INSERT INTO REZERVARE VALUES(6,5,4,NULL,NULL);
INSERT INTO REZERVARE VALUES(8,2,17,NULL,NULL);
13â€” sequence
CREATE SEQUENCE sequence_1
start with 14
increment by 1
minvalue 14
maxvalue 100
cycle;

INSERT INTO REZERVARE VALUES(sequence_1.nextval,10,2,NULL,NULL);
INSERT INTO REZERVARE VALUES(sequence_1.nextval,8,2,NULL,NULL);

16 --AFISEAZA TOATE CURSURILE CU NR LOR DE REZERVARI UNDE PRETUL E DE 40 LEI SAU CLIENTULL NU ARE NUMELE DIANA,MARIA,ALINA
SELECT CURS.CURS_ID,COUNT(REZERVARE.CURS_ID)
FROM ((REZERVARE RIGHT OUTER JOIN CURS ON CURS.CURS_ID=REZERVARE.CURS_ID) LEFT OUTER JOIN TIPDANS ON TIPDANS.TIPDANS_ID=CURS.TIPDANS_ID)LEFT OUTER JOIN CLIENTI ON CLIENTI.CLIENT_ID=REZERVARE.CLIENT_ID
WHERE TIPDANS.PRET=40 OR CLIENTI.NUME NOT IN ('DIANA','MARIA','ALINA')
GROUP BY CURS.CURS_ID
ORDER BY CURS.CURS_ID;

--AFISEAZA NUMELE CU LITERA MARE SI PRENUMELE DOAR IN LITERE MICI ALE CLIENTILOR CARE AU FACUT REZERVARI SI AU ABONAMENT SAU VOUCHER CU UN ID MAI MARE DECAT UNU-SUBCERERE NESINCRONIZATA
SELECT INITCAP(NUME),LOWER(PRENUME)
FROM CLIENTI
WHERE CLIENT_ID IN (SELECT CLIENT_ID
 FROM REZERVARE) AND NVL(VOUCHER_ID,ABONAMENT_ID)>1;


--AFISEAZA ID-UL CURSULUI CU DENUMIREA TIPULUI DE DANS SI NIVELUL ACESTUIA(INCEPATOR,AVANSAT,INTERMEDIAR)
 SELECT CURS.CURS_ID,TIPDANS.DENUMIRE, DECODE(CURS.DIFICULTATE,1,'INCEPATOR',2,'INTERMEDIAR',3,'AVANSAT',0)
 FROM CURS INNER JOIN TIPDANS ON CURS.TIPDANS_ID=TIPDANS.TIPDANS_ID
 ORDER BY CURS.CURS_ID;

--SAU CU CASE

SELECT CURS.CURS_ID,TIPDANS.DENUMIRE, (CASE DIFICULTATE
WHEN 1 THEN 'INCEPATOR'
WHEN 2 THEN 'INTERMEDIAR'
WHEN 3 THEN 'AVANSAT'
ELSE '0'
END)
 FROM CURS INNER JOIN TIPDANS ON CURS.TIPDANS_ID=TIPDANS.TIPDANS_ID
 ORDER BY CURS.CURS_ID;

--scrieti id-ul cursurilor care au fost rezervate de 4 oameni
 WITH PATRUREZERVARI(IDC) as (SELECT B.idc
                        FROM (SELECT COUNT(*) NR,curs.curs_id idc
                              FROM CURS right JOIN REZERVARE ON CURS.CURS_ID=REZERVARE.CURS_ID
                              group by curs.curs_id)B
                        WHERE B.NR=4)
SELECT CURS_ID
FROM CURS,PATRUREZERVARI
WHERE CURS_ID=IDC;
